从图9-7和图9-8中，我们可以看到抽象类CommsManager定义了用于生成3个产品(ApptEncoder TtdEncoder ContactEncoder)的接口。
现在来具体实现一个创建者，然后再创建特定类型的产品。见代码9.4.2。
首先，在代码9.4.2中，使用了工厂方法模式。即CommsManager的子类负责实例化对象。
同时，也使用了抽象工厂模式。每个CommsManager类的子类都可以实例化一组不同的产品。

抽象方法模式和抽象工厂模式的异同:
同:
抽象方法模式和抽象工厂模式都是使用特定的类来负责实例化对象的。
按照专业术语来讲，即都是使用工厂来创建产品的。
异:
抽象方法模式定义的工厂子类是和产品子类是1对1的。这导致了工厂类和产品类的代码组织非常相似。当添加新的产品类时，就必须创建一组新的工厂类。
抽象工厂模式定义的工厂子类是可以创建一组产品的。即工厂子类和产品子类是1对多的关系。说穿了就是由类和产品的1对1变成了工厂方法和产品的1对1。