好的系统一般通过方法调用来传递对象。每个类都会和背景环境保持独立。
通过清晰地通信方式和系统中其他部分进行协作。当你需要使用一些类来作为对象间的沟通渠道时，
此时就产生了依赖关系。

假设我们有一个用于保存系统信息的Preferences类。该类使用一个
Preferences对象来保存DSM、URL根目录、文件路径等信息。这些信息在每次部署系统时都会有所不同。
这个对象可以被系统中和它无关的对象设置和获取消息。

首先，在对象间传递Preferences对象并不合适。因为有些原来不使用Preferences对象的类现在被强制要求
接收Preferences对象，以便这些类能传递Preferences对象给其他对象。这样做就又产生了一个新的耦合，并不是好的做法。

同时还要保证系统中所有的对象使用的是同一个Preferences对象。

那么问题的关键点在于:
1.Preferences对象可以被系统中任何对象使用。
2.Preferences对象不应该被储存在全局变量中。因为这样就会被覆写。
3.系统中不应该超过一个Preferences对象。
