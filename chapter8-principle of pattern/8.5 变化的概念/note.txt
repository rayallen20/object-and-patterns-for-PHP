问题:从哪里开始下手设计代码？
把变化的概念封装起来。

首先，如何发现变化的元素(概念)？
误用继承就是一个标志。有的误用表现为一次实现不同分支的继承；有的表现为在一个类方法中实现了
某个算法，而这个算法和这个类的核心职责无关。或者是出现了条件表达式，则说明这些就是变化的元素。

找到了变化的元素之后，通过把它们封装到一个类中，提升封装的适用性。
变化的元素也可以被提取出来形成子类，多个子类拥有共同的父类。这个父类能被其他类使用。
好处:
专注于职责
通过组合提高灵活性
使继承层级体系更紧凑和集中
减少重复