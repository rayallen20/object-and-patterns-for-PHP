拦截器的作用:
拦截发送到未定义的方法和属性的消息。也称为重载
__get($property) 访问未定义或无法访问的属性时被调用
__set($property, $value) 给未定义或无法访问的属性赋值时被调用
__isset($property) 对未定义或无法访问的属性调用isset()时被调用
__unset($property) 对未定义或无法访问的属性调用unset()时被调用
__call($method, $argArray) 调用未定义的方法时被调用

1. __get()和__set()
这两个方法用于处理类中未被声明的属性。
__get()
无论从__get()方法返回了什么，都会直接发送给客户端代码。就像客户端代码访问的这个属性是存在的一样。
见代码4.8 __get()和4.8 __set()

2. __isset()和__unset()
当客户端代码在一个未定义的属性上调用isset()时，__isset()被调用。
见代码 4.8 __isset()和4.8 __unset()

3. __call()
__call()接收2个参数:未定义方法的名称 和 传递给要调用的方法的所有参数(数组)
__call()实现委托很有用。
委托:一个对象转发或委托一个请求给另一个对象，被委托的一方替原先对象处理请求。
这类似于继承，在子类中调用父类的方法有些类似。但是在继承时，父类和子类的关系是固定的。
使用委托则可以在代码运行时改变使用的对象。也就是说委托比继承有更强的灵活性。
见代码 4.8 __call()