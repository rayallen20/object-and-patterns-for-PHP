4.1 静态方法和属性
方法和属性不仅可以通过对象来访问，也可以通过类来访问。关键字static。
静态方法是以类为作用域的函数。※
静态方法不能访问这个类中的普通属性，因为非静态属性属于对象，不属于类。
静态方法只能访问静态属性。
因为静态属性或静态方法属于类而非对象，所以语法上 类名::静态属性 类名::静态方法() 即可


要从当前类中访问静态方法或属性，使用self关键字。self指向当前类，犹如$this指向当前对象一样。

注解:
只有在使用parent关键字调用方法时，才能对一个非静态方法进行静态形式的调用。
除非是访问一个被覆写的方法，否则永远只能用::来访问被明确声明为static的方法或属性。

静态方法或属性出现的原因:
1. 在代码中的任何地方都可用。
    不需要在对象间传递对象，也不需要将实例放到全局变量中。就可以访问类中的方法。
2. 类的每个实例都可以访问类中定义的静态属性，所以可以利用静态属性来设置值，这个值可以被类的所有实例使用。
3. 不需要实例对象就能访问静态属性或方法。 见代码4.1和4.1-2