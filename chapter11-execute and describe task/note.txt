本章介绍的几个模式能帮助我们解决实际问题，例如解析一种迷你语言，或封装一个算法。

解释器(Interpreter)模式:构造一个可以用于创建脚本化应用的迷你语言解释器。
策略(Strategy)模式:在系统中定义算法并以他们自己的类型封装。
观察者(Observer)模式:创建依赖关系，当有系统事件发生时通知观察者对象。
访问者(Visitor)模式:在对象树的所有节点上应用操作。
命令(Command)模式:创建可被保存和传送的命令对象。